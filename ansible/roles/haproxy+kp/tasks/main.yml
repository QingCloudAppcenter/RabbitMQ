---
- name: update apt for haproxy
  shell: |
    apt-get install software-properties-common
    add-apt-repository ppa:vbernat/haproxy-2.0
    apt-get update -y


- name: install haproxy
  apt:
    name: ['haproxy=2.0.\*', 'hatop','arping']
    update_cache: yes
    state: present

- name: add apt_key for rabbitmq
  shell: |
  wget -O - "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey" | sudo apt-key add -

- name: add apt signing key, will not download if present
  apt_key:
    url: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
    state: present

- name: add bintray repo for latest Rabbitmq
  shell: |
  sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list <<EOF
  deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-21.x
  deb https://dl.bintray.com/rabbitmq/debian bionic main
  EOF

- name: install apt https
  apt:
    name: apt-transport-https
    update_cache: yes

- name: install
  apt:
    name: rabbitmq-server={{ rabbitmq_version }}-1
    update_cache: yes
    state: present

- name: enabled all plugns
  shell: 
    rabbitmq-plugins enable rabbitmq_management rabbitmq_web_stomp rabbitmq_stomp rabbitmq_mqtt rabbitmq_web_mqtt rabbitmq_management rabbitmq_delayed_message_exchange rabbitmq_shovel rabbitmq_shovel_management

- name: add users for monitor or login
  shell: |
    rabbitmqctl add_user admin {{ userPasswd }}
    rabbitmqctl set_user_tags admin administrator
    rabbitmqctl  set_permissions -p "/" admin ".*" ".*" ".*"
    rabbitmqctl add_user monitor  monitor4rabbitmq
    rabbitmqctl set_user_tags monitor administrator
    rabbitmqctl  set_permissions -p "/" monitor ".*" ".*" ".*"
    systemctl restart rabbitmq-server


- name: disable auto startup on boot
  systemd:
    name: rabbitmq-server
    enabled: no

- name: Prepare dev env for keepalived
  apt:
    update_cache: yes
    name: ['tree', 'curl', 'gcc', 'libssl-dev', 'libnl-3-dev', 'libnl-genl-3-dev', 'libsnmp-dev']
    state: present

- name: Prepare directories for keepalived
  file:
    path: "/opt/keepalived"
    state: directory

- name: Download reusable keepalived binaries locally
  get_url:
    url: "https://www.keepalived.org/software/keepalived-2.0.18.tar.gz"
    dest: "/opt/keepalived/keepalived-2.0.18.tar.gz"
#  delegate_to: localhost

- name: Extract binary
  unarchive:
    src: "/opt/keepalived/keepalived-2.0.18.tar.gz"
    dest: "/opt/keepalived/keepalived-2.0.18"
    creates: "//opt/keepalived/keepalived-2.0.18/configure"
    extra_opts: [ --strip-components=1 ]

- name: install keepalived
  shell: |
  cd /opt/keepalived/keepalived-2.0.18
  ./configure
  make
  sudo make install

- name: install confd files
  include_tasks: ../../utils/tasks/process-confd-files.yml
