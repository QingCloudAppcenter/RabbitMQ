{
    "Name": "名称",
    "Description": "描述",
    "RabbitMQ cluster propertie": "RabbitMQ 集群",
    "The name of the RabbitMQ service": "RabbitMQ 服务名称",
    "The description of the RabbitMQ service": "RabbitMQ 服务描述",
    "VxNet": "私有网络",
    "Test": "测试环境",
    "Prod": "生产环境",
    "Test: 3 disc nodes with 1 HAProxy node; Prod: 3 disc nodes with 2 HAProxy nodes": "测试环境：1核1G磁盘节点 x 3 ，1核1G客户端节点 x 1，1核1G负载均衡节点 x 1；生产环境：2核4G超高性能型磁盘节点 x 3，1核1G客户端节点 x 1，2核2G负载均衡节点 x 2",
    "Memory of each node": "每个节点的内存",
    "The volume size for each instance": "每个实例的磁盘大小",
    "Choose a vxnet to join": "选择要加入的私有网络",
    "CPU": "CPU",
    "CPUs of each node": "每个节点的 CPU 数量",
    "Memory": "内存",
    "Memory of each node ": "每个节点的内存数量",
    "Instance Class": "主机类型",
    "RabbitMQ Node": "RabbitMQ 节点",
    "RabbitMQ Node Count": "RabbitMQ 节点数量",
    "Node Count": "节点数量",
    "Number of nodes for the cluster to create": "要创建的节点数量",
    "Volume Size": "存储容量",
    "The volume size for each node": "每个节点的存储容量",
    "instance class": "实例类型",
    "count" : "个",
    "Count" : "节点个数",
    "Sockets Used": "Sockets 句柄数",
    "Fd Used": "文件句柄数",
    "Proc Used": "Broker 子进程数",
    "Run Queue": "正在等待的 Erlang 进程数",
    "Mem Used": "RabbitMQ 内存占用 (MB)",
    "Haproxy+Keepalived": "负载均衡器",
    "roundrobin": "轮询",
    "leastconn": "最小连接",
    "static-rr": "静态权重",
    "source": "IP 哈希",
    "uri": "uri 哈希",
    "client Node": "client 节点",
    "Disc Node Count": "磁盘节点个数",
    "Ram Node Count": "内存节点个数",
    "Client Node Count": "client 节点个数",
    "haproxy web port": "haproxy 监控界面端口",
    "haproxy web login usernam": "haproxy 监控界面用户名",
    "haproxy web login passwd": "haproxy 监控界面密码",
    "url_param": "url_param 哈希",
    "haproxy balance policy": "负载均衡策略(roundrobin:轮询, leastconn:最小连接, static-rr:静态权重, source:IP 哈希, uri:uri 哈希, url_param:url_param 哈希)",
    "Haproxy HA Node Count": "负载均衡器高可用节点个数(0个节点：不需要负载均衡;1个节点：负载均衡;2个节点：负载均衡器高可用负载均衡)",
    "Disc Node": "磁盘节点",
    "Ram Node": "内存节点",
    "Number of Erlang processes that will accept connections for the TCP listeners": "接受TCP侦听器连接的Erlang进程数",
    "Maximum time for AMQP 0-8/0-9/0-9-1 handshake (after socket connection and SSL handshake), in milliseconds": "AMQP 0-8/0-9/0-9-1 handshake (在 socket 连接和SSL 握手之后）的最大时间, 单位为毫秒",
    "Memory threshold at which the flow control is triggered": "流程控制触发的内存阀值",
    "Fraction of the high watermark limit at which queues start to page messages out to disc to free up memory": "高水位限制的分数，当达到阀值时，队列中消息会转移到磁盘上以释放内存",
    "Disk free space (in bytes) limit of the partition on which RabbitMQ is storing data": "RabbitMQ存储数据分区的可用磁盘空间限制．当可用空间值低于阀值时，流程控制将被触发.默认情况下，可用磁盘空间必须超过50MB",
    "Maximum permissible size of a frame (in bytes) to negotiate with clients,setting to 0 means unlimited but will trigger a bug in some QPid clients. Setting a larger value may improve throughput; setting a smaller value may improve latency": "与客户端协商的允许最大frame大小. 设置为０表示无限制，但在某些QPid客户端会引发bug. 设置较大的值可以提高吞吐量;设置一个较小的值可能会提高延迟",
    "Maximum permissible number of channels to negotiate with clients. Setting to 0 means unlimited. Using more channels increases memory footprint of the broker.": "与客户端协商的允许最大chanel大小. 设置为０表示无限制．该数值越大，则broker使用的内存就越高",
    "Value representing the heartbeat delay, in seconds, that the server sends in the connection.tune frame": "表示心跳延迟(单位为秒) ，服务器将在connection.tune frame中发送.如果设置为 0, 心跳将被禁用. 客户端可以不用遵循服务器的建议,禁用心跳可以在有大量连接的场景中提高性能，但可能会造成关闭了非活动连接的网络设备上的连接落下",
    "Statistics collection mode. Primarily relevant for the management plugin": "统计收集模式。主要与管理插件相关",
    "Statistics collection interval in milliseconds. Primarily relevant for the management plugin": "统计收集时间间隔(毫秒为单位)． 主要针对于 management plugin",
    "How to handle network partitions": "如何处理网络分区",
    "Set to true to precompile parts of RabbitMQ with HiPE, a just-in-time compiler for Erlang. This will increase server throughput at the cost of increased startup time": "将此选项设置为true,将会使用HiPE预编译部分RabbitMQ,Erlang的即时编译器.你可以看到花费几分钟延迟启动的成本，就可以带来20-50% 更好性能",
    "How frequently nodes should send keepalive messages to other nodes (in milliseconds)": "节点向其它节点发送存活消息和频率(毫秒). 注意，这与 net_ticktime是不同的; 丢失存活消息不会引起节点掉线",
    "The actual interval will vary depending on how long it takes to execute the operation": "GC 实际间隔将根据执行操作所需的时间而有所不同",
    "The name of a user as which to create the tracing queues and bindings": "用于创建追踪队列的用户",
    "Disabling background GC may reduce latency for client operations, keeping it enabled may reduce median RAM usage": "是否启用 GC，开启或许可以减少内存使用",
    "Set to true to have RabbitMQ perform a reverse DNS lookup on client connections, and present that information through rabbitmqctl and the management plugin": "设置为true,可让客户端在连接时让RabbitMQ 执行一个反向DNS查找, 然后通过 rabbitmqctl 和 管理插件来展现信息",
    "Whether or not to enable proxy protocol support. Once enabled, clients cannot directly connect to the broker anymore. They must connect through a load balancer that sends theproxy protocol header to the broker at connection time.This setting applies only to AMQP clients, other protocolslike MQTT or STOMP have their own setting to enable proxy protocol. See the plugins documentation for more information": "是否启用代理协议支持。一旦启用，客户端就不能直接连接到代理了。他们必须通过负载平衡器连接，此设置仅适用于AMQP客户端，其他协议类型的MQTT或STOMP有自己的设置来启用代理协议。有关更多信息，请参阅插件文档",
    "err_code240": "扩容失败，请检查集群状态",
    "err_code241": "节点状态不正常，请检查集群状态",
    "err_code242": "删除过多内存节点和磁盘节点，pause_minority 模式下每次仅允许删除小于总数的 1/2 个节点",
    "err_code243": "节点磁盘使用率超过 30%，剩余空间不足或导致升级失败，请先扩容",
    "Whether to enable log web console": "日志管理控制台开关，true=开启，默认开启",
    "notice_when_upgrade": "1. 如果集群使用了优先队列 (priority queue)，请根据 [文档](https://docs.qingcloud.com/product/middware/rabbitmq/index] 进行操作，否则会导致此类队列里的数据**全部丢失**；\n 2. 若集群中缓存有大量消息数据，升级将极为耗时，单核 1G 内存的节点 10G 数据需要 30 分钟，数据越多速度越慢，建议业务低谷时队列基本为空时操作；\n 3. 每个节点磁盘使用率不得超过 30%，剩余空间不足会导致升级失败。"
}
